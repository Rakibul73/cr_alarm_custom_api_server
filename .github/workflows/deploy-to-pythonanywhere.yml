name: Deploy to PythonAnywhere

on:
  push:
    branches:
      - main  # or your default branch name

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.0'  # Specify the Python version you're using

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
      # pip install -r requirements.txt  # If you have a requirements.txt file

    - name: Install requests library
      run: python -m pip install requests

    - name: Fetch CPU quota info from PythonAnywhere
      run: |
        python - <<EOF
        import requests

        username = '${{ secrets.USERNAME }}'
        token = '${{ secrets.PA_API_TOKEN }}'  # Assuming PA_API_TOKEN is stored in GitHub Secrets

        response = requests.get(
            f'https://www.pythonanywhere.com/api/v0/user/{username}/cpu/',
            headers={'Authorization': f'Token {token}'}
        )

        if response.status_code == 200:
            print('CPU quota info:')
            print(response.content)
        else:
            print(f'Got unexpected status code {response.status_code}: {response.content!r}')
        EOF
      env:
        PA_API_TOKEN: ${{ secrets.PA_API_TOKEN }}  # Injecting PA_API_TOKEN as an environment variable

  
    - name: Countdown before reload
      run: |
        for i in $(seq 30 -1 1); do
          echo "Waiting $i seconds..."
          sleep 1
        done
    
    - name: Reload pythonanywhere webapp
      uses: jensvog/pythonanywhere-webapp-reload-action@v1
      env:
          PA_API_TOKEN: ${{ secrets.PA_API_TOKEN }}
          USERNAME: ${{ secrets.USERNAME }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
      with:
        host: 'www.pythonanywhere.com'
        username: '${{ secrets.USERNAME }}'
        api-token: '${{ secrets.PA_API_TOKEN }}'
        domain-name: '${{ secrets.DOMAIN_NAME }}'
        
